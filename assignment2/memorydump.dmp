%B1234123412341234^Cardsfd43654356235454631254656435135464543654361254656435135464543513546546;1234123412341234=1405101193010877?00000?;1234123412340ohn^235454631123%B4128123412341234^Binhai/Zhu^150910100000019301000000877000000?;4128123412341234=000?;1234123412341fdwei000dfg00?;12341%B123412341234235454631254656435135464543513546546;1234123412^341246101193010877?00000?;1234123412340000?;123412341dfggadsfi;1234123412341234=1405101193010877?00000?;1234123412340dfg;1234123412341fdwei1405101235649855189454556435135464543513546546;1234123412341234=1405101193010877?00000?;1234123412340000?;123412sfddi000000000000?;1234^234=1405101193010877?00000?;123412341234000dfg12^3412341234sfdeif^123545466;12341234365hn^2354546311234123ohn^235454631254656435135464543513546546;1234123412341234=1405101193010877?00000?;123412341234000451234123412341fdwei14051012354546312546^11193010877?00000?;1234123412340000?;1234123412341fdwei;1234123412341354645434656435135464543513546546;1234123412341234=1405101193010877?00000?;1234123414635000dfg;1234123412341fdweif^123545466;123412341231509104123ohn^235454631254656435135464543513546546;1234123412341234=1405101193010877?
%B41281234123Yang9301000000877000000?;4128123412341293010877?%B4128123412341234^Binhai/0000877000000?;4128123412341234=1509101193010877?000?;1234123412341fdwei000dfg00?;12341%B123412341234235454631254656435135464543513546546;1234123412^341246101193010877?00000?;1234123412340000?;123412341dfggadsfi;1234123412341234=1405101193010877?00000?;1234123412340dfg;1234123412341fdwei1405101235649855189454556435135464543513546546;1234123412341234=1405101193010877?00000?;1234123412340000?;123412sfddi000000000000?;1234^234=1405101193010877?00000?;123412341234000dfg12^3412341234sfdeif^123545466;12341234365hn^2354546311234123ohn^235454631254656435135464543513546546;1234123412341234=1405101193010877?00000?;123412341234000451234123412341fdwei14051012354546312546^11193010877?00000?;1234123412340000?;1234123412341fdwei;1234123412341354645434656435135464543513546546;1234123412341234=1405101193010877?00000?;1234123414635000dfg;1234123412341fdweif^123545466;1234123412346;1234123412^341246101193010877?00000?;1234123412340000?;123412341dfggadsfi;1234123412341234=1405101193010877?00000?;1234123412340dfg;1234123412341fdwei1405101235649855189454556435135464543513546546;1234123412341234=1405101193010877?00000?;1234123412340000?;123412sfddi000000000000?;1234^234=1405101193010877?00000?;123412341234000dfg12^3412341234sfdeif^123545466;12341234365hn^23534=1405101193010877?00000?;123412341234000dfg12^3412341234sfdeif^123545466;12341234365hn^2354546311234123ohn^235454631254656435135464543513546546;1234123412341234=1405101193010877?00000?;123412341234000451234123412341fdwei14051012354546312546^11193010877?00000?;1234123412340000?;1234123412341fdwei;1234123412341354645434656435135464543513546546;1234123412341234=1405101193010877?00000?;1234123414635000dfg;1234123412341fdweif^123545466;1234123455189454556435135464543513546546;1234123412341234=1405101193010877?00000?;1234123412340000?;123412sfddi000000000000?;1234^234=1405101193010877?00000?;123412341234000dfg12^3412341234sfdeif^123545466;12341234365hn^23534=1405101193010877?00000?;123412341234000dfg12^3412341234sfdeif^123545466;123412sfddi000000000000?;1234^234=1405101193010877?00000?;123412341234000dfg12^3412341234sfdeif^123545466;12341234365hn^2354546311234123ohn^235454631254656435135464543513546546;1234123412341234=1405101193010877?00000?;123412341234000451234123412341fdwei14051012354546312546^11193010877?00000?;1234123412340000?;1234123412341fdwei;1234123412341354645434656435135464543513546546;1234123412341234=1405101193010877?00000?;1234123414635000dfg;1234123412341fdweif^123545466;1234123412346;1234123412^341246101193010877?00000?;1234123412340000?;123412341dfggadsfi;1234123412341234=1405101193010877?00000?;1234123412340dfg;1234123412341fdwei1454546312546^11193010877?00000?;1234123412340000?;1234123412%B4128123412341235^Paxton/John^181213100000019301000000877000000?;4128123412341234=1509101193010877?341fdwei;1234123412341354645434656435135464543513546546;1234123412341234=1405101193010877?00000?;1234123414635000dfg;1234123412341fdweif^123545466;1234123455189454556435135464543513546546;1234123412341234=1405101193010877?00000?;1234123412340000?;123412sfddi000000000000?;1234^234=1405101193010877?00000?;123412341234000dfg12^3412341234sfdeif^123545466;12341234365hn^23534=1405101193010877?00000?;123412341234000dfg12^3412341234sfdeif^123545466;123412sfddi000000000000?;1234^234=1405101193010877?00000?;123412341234000dfg12^3412341234sfdeif^123545466;1234123


package step1;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Scanner;
import org.antlr.v4.runtime.*;
import step1.Little.LittleParser.java;

public class Driver {
	public static void main(String[] args) throws FileNotFoundException, UnsupportedEncodingException {
		ArrayList<String> input = get_inputFileArray();
		PrintWriter writer = new PrintWriter("src/step1/Sagen_Matthew.output", "UTF-8"); //this is used to print to output file
		
	    CommonTokenStream tokens = new CommonTokenStream( lexer );
	    
		/*
		for(String s : input) {
			System.out.println(s);
			writer.println(s);
		}*/
		
		writer.close();
	}
	
	public static ArrayList<String> get_inputFileArray() throws FileNotFoundException, UnsupportedEncodingException{ //helper method creates jobs from input.txt
		Scanner scanner = null;
		ArrayList<String> input = new ArrayList<String>();	//holds data from input.txt in the form of Job# | Arrival_Time | Processing_Time
		//ArrayList<Job> jobs = new ArrayList<Job>();			//holds individual jobs from input.
		
        try{
            scanner = new Scanner(new File("Step1/inputs/loop.micro"));
        }
        //throws error if the file can't be located.
        catch(Exception e){
            System.out.println("File not found");
            System.exit(0);
        }
        //add data to input list.
        while(scanner.hasNextLine()){
            input.add(scanner.nextLine()); 
        }
        return input;
	}
}
